/* Liquid Glass Design System inspired by Apple's aesthetic */

/* Base glass morphism styles */
.glassBase {
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.125);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Main glass container with liquid effect */
.liquidGlass {
  composes: glassBase;
  position: relative;
  border-radius: 24px;
  overflow: hidden;
  box-shadow:
    0 8px 32px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.2),
    inset 0 -1px 0 0 rgba(0, 0, 0, 0.1);
}

/* Light refraction layer */
.liquidGlass::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 50%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.15) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    transparent 100%
  );
  pointer-events: none;
  border-radius: 24px 24px 0 0;
}

/* Depth and shadow layer */
.liquidGlass::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30%;
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05) 0%, transparent 100%);
  pointer-events: none;
  border-radius: 0 0 24px 24px;
}

/* Interactive hover state (desktop/fine pointers only) */
@media (hover: hover) and (pointer: fine) {
  .liquidGlass:hover {
    backdrop-filter: blur(25px) saturate(200%);
    -webkit-backdrop-filter: blur(25px) saturate(200%);
    background: rgba(255, 255, 255, 0.08);
    transform: translateY(-2px);
    box-shadow:
      0 12px 48px rgba(0, 0, 0, 0.15),
      inset 0 1px 0 0 rgba(255, 255, 255, 0.3),
      inset 0 -1px 0 0 rgba(0, 0, 0, 0.15);
  }
}

/* Floating glass card */
.glassCard {
  composes: liquidGlass;
  padding: 2rem;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
}

/* Glass button with liquid effect */
.glassButton {
  composes: glassBase;
  padding: 12px 24px;
  border-radius: 16px;
  font-weight: 500;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
}

.glassButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
  transform: translate(-50%, -50%);
  transition:
    width 0.6s,
    height 0.6s;
}

@media (hover: hover) and (pointer: fine) {
  .glassButton:hover::before {
    width: 300px;
    height: 300px;
  }
  .glassButton:hover {
    transform: translateY(-1px);
    box-shadow:
      0 8px 24px rgba(0, 0, 0, 0.12),
      inset 0 1px 0 0 rgba(255, 255, 255, 0.25);
  }
}

/* Disable hover effects on touch/no-hover devices */
@media (hover: none) {
  .liquidGlass:hover,
  .glassButton:hover {
    transform: none;
    box-shadow: none;
    backdrop-filter: inherit;
    -webkit-backdrop-filter: inherit;
    background: inherit;
  }
  .glassButton:hover::before {
    width: 0;
    height: 0;
  }
}

/* Navigation bar with glass effect */
.glassNav {
  composes: glassBase;
  padding: 1rem 2rem;
  border-radius: 20px;
  display: flex;
  align-items: center;
  gap: 2rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.05) 100%);
}

/* Glass input field */
.glassInput {
  composes: glassBase;
  padding: 12px 16px;
  border-radius: 12px;
  outline: none;
  color: inherit;
  background: rgba(255, 255, 255, 0.05);
  transition: all 0.3s ease;
}

.glassInput:focus {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.2);
  box-shadow:
    0 0 0 3px rgba(255, 255, 255, 0.1),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.2);
}

/* Animated gradient overlay */
.gradientOverlay {
  position: absolute;
  top: -10%;
  left: -50%;
  width: 200%;
  height: 120%;
  background: linear-gradient(
    45deg,
    transparent 35%,
    rgba(255, 255, 255, 0.03) 45%,
    rgba(255, 255, 255, 0.08) 48%,
    rgba(255, 255, 255, 0.12) 50%,
    rgba(255, 255, 255, 0.08) 52%,
    rgba(255, 255, 255, 0.03) 55%,
    transparent 65%
  );
  animation: shimmer 3s infinite;
  pointer-events: none;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%) rotate(0deg);
  }
  100% {
    transform: translateX(100%) rotate(0deg);
  }
}

/* Colored glass variants */
.glassPrimary {
  composes: liquidGlass;
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(59, 130, 246, 0.05) 100%);
  border-color: rgba(59, 130, 246, 0.2);
}

.glassSuccess {
  composes: liquidGlass;
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.1) 0%, rgba(34, 197, 94, 0.05) 100%);
  border-color: rgba(34, 197, 94, 0.2);
}

.glassDanger {
  composes: liquidGlass;
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, rgba(239, 68, 68, 0.05) 100%);
  border-color: rgba(239, 68, 68, 0.2);
}

/* Glass modal/overlay */
.glassModal {
  composes: liquidGlass;
  padding: 2.5rem;
  max-width: 90vw;
  max-height: 90vh;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.06) 100%);
  box-shadow:
    0 24px 64px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.25),
    inset 0 -1px 0 0 rgba(0, 0, 0, 0.15);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .liquidGlass {
    border-radius: 16px;
  }

  .glassCard {
    padding: 1.5rem;
  }

  .glassNav {
    padding: 0.75rem 1.5rem;
    border-radius: 16px;
  }
}

/* Dark mode enhancements */
@media (prefers-color-scheme: dark) {
  .glassBase {
    background: rgba(255, 255, 255, 0.03);
    border-color: rgba(255, 255, 255, 0.08);
  }

  .liquidGlass:hover {
    background: rgba(255, 255, 255, 0.05);
  }

  .glassInput {
    background: rgba(255, 255, 255, 0.03);
  }

  .glassInput:focus {
    background: rgba(255, 255, 255, 0.05);
  }
}

/* Performance optimizations */
@media (prefers-reduced-motion: reduce) {
  .liquidGlass,
  .glassButton,
  .glassInput {
    transition: none;
  }

  .gradientOverlay {
    animation: none;
  }

  .glassButton::before {
    transition: none;
  }
}
